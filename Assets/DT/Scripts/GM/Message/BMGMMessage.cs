// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BMGMMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from BMGMMessage.proto</summary>
public static partial class BMGMMessageReflection {

  #region Descriptor
  /// <summary>File descriptor for BMGMMessage.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static BMGMMessageReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChFCTUdNTWVzc2FnZS5wcm90byJHCgVHTUFjaxIOCgZzdGF0dXMYASABKAUS",
          "CwoDbXNnGAIgASgJEg4KBmVyck1zZxgDIAEoCRIRCglpc1N1Y2Nlc3MYBCAB",
          "KAgiRQoKTW9kaWZ5SnNvbhIQCghqc29uTmFtZRgBIAEoCRITCgtqc29uQ29u",
          "dGVudBgCIAEoCRIQCghqc29uVHlwZRgDIAEoCWIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::GMAck), global::GMAck.Parser, new[]{ "Status", "Msg", "ErrMsg", "IsSuccess" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ModifyJson), global::ModifyJson.Parser, new[]{ "JsonName", "JsonContent", "JsonType" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class GMAck : pb::IMessage<GMAck>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<GMAck> _parser = new pb::MessageParser<GMAck>(() => new GMAck());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<GMAck> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BMGMMessageReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GMAck() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GMAck(GMAck other) : this() {
    status_ = other.status_;
    msg_ = other.msg_;
    errMsg_ = other.errMsg_;
    isSuccess_ = other.isSuccess_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public GMAck Clone() {
    return new GMAck(this);
  }

  /// <summary>Field number for the "status" field.</summary>
  public const int StatusFieldNumber = 1;
  private int status_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int Status {
    get { return status_; }
    set {
      status_ = value;
    }
  }

  /// <summary>Field number for the "msg" field.</summary>
  public const int MsgFieldNumber = 2;
  private string msg_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Msg {
    get { return msg_; }
    set {
      msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "errMsg" field.</summary>
  public const int ErrMsgFieldNumber = 3;
  private string errMsg_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string ErrMsg {
    get { return errMsg_; }
    set {
      errMsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "isSuccess" field.</summary>
  public const int IsSuccessFieldNumber = 4;
  private bool isSuccess_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool IsSuccess {
    get { return isSuccess_; }
    set {
      isSuccess_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as GMAck);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(GMAck other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Status != other.Status) return false;
    if (Msg != other.Msg) return false;
    if (ErrMsg != other.ErrMsg) return false;
    if (IsSuccess != other.IsSuccess) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Status != 0) hash ^= Status.GetHashCode();
    if (Msg.Length != 0) hash ^= Msg.GetHashCode();
    if (ErrMsg.Length != 0) hash ^= ErrMsg.GetHashCode();
    if (IsSuccess != false) hash ^= IsSuccess.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (Status != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Status);
    }
    if (Msg.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Msg);
    }
    if (ErrMsg.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ErrMsg);
    }
    if (IsSuccess != false) {
      output.WriteRawTag(32);
      output.WriteBool(IsSuccess);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (Status != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(Status);
    }
    if (Msg.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Msg);
    }
    if (ErrMsg.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(ErrMsg);
    }
    if (IsSuccess != false) {
      output.WriteRawTag(32);
      output.WriteBool(IsSuccess);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Status != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(Status);
    }
    if (Msg.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
    }
    if (ErrMsg.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrMsg);
    }
    if (IsSuccess != false) {
      size += 1 + 1;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(GMAck other) {
    if (other == null) {
      return;
    }
    if (other.Status != 0) {
      Status = other.Status;
    }
    if (other.Msg.Length != 0) {
      Msg = other.Msg;
    }
    if (other.ErrMsg.Length != 0) {
      ErrMsg = other.ErrMsg;
    }
    if (other.IsSuccess != false) {
      IsSuccess = other.IsSuccess;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          Status = input.ReadInt32();
          break;
        }
        case 18: {
          Msg = input.ReadString();
          break;
        }
        case 26: {
          ErrMsg = input.ReadString();
          break;
        }
        case 32: {
          IsSuccess = input.ReadBool();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 8: {
          Status = input.ReadInt32();
          break;
        }
        case 18: {
          Msg = input.ReadString();
          break;
        }
        case 26: {
          ErrMsg = input.ReadString();
          break;
        }
        case 32: {
          IsSuccess = input.ReadBool();
          break;
        }
      }
    }
  }
  #endif

}

public sealed partial class ModifyJson : pb::IMessage<ModifyJson>
#if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    , pb::IBufferMessage
#endif
{
  private static readonly pb::MessageParser<ModifyJson> _parser = new pb::MessageParser<ModifyJson>(() => new ModifyJson());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ModifyJson> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::BMGMMessageReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ModifyJson() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ModifyJson(ModifyJson other) : this() {
    jsonName_ = other.jsonName_;
    jsonContent_ = other.jsonContent_;
    jsonType_ = other.jsonType_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ModifyJson Clone() {
    return new ModifyJson(this);
  }

  /// <summary>Field number for the "jsonName" field.</summary>
  public const int JsonNameFieldNumber = 1;
  private string jsonName_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string JsonName {
    get { return jsonName_; }
    set {
      jsonName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "jsonContent" field.</summary>
  public const int JsonContentFieldNumber = 2;
  private string jsonContent_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string JsonContent {
    get { return jsonContent_; }
    set {
      jsonContent_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "jsonType" field.</summary>
  public const int JsonTypeFieldNumber = 3;
  private string jsonType_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string JsonType {
    get { return jsonType_; }
    set {
      jsonType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ModifyJson);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ModifyJson other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (JsonName != other.JsonName) return false;
    if (JsonContent != other.JsonContent) return false;
    if (JsonType != other.JsonType) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (JsonName.Length != 0) hash ^= JsonName.GetHashCode();
    if (JsonContent.Length != 0) hash ^= JsonContent.GetHashCode();
    if (JsonType.Length != 0) hash ^= JsonType.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    output.WriteRawMessage(this);
  #else
    if (JsonName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(JsonName);
    }
    if (JsonContent.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(JsonContent);
    }
    if (JsonType.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(JsonType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
    if (JsonName.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(JsonName);
    }
    if (JsonContent.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(JsonContent);
    }
    if (JsonType.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(JsonType);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(ref output);
    }
  }
  #endif

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (JsonName.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonName);
    }
    if (JsonContent.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonContent);
    }
    if (JsonType.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonType);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ModifyJson other) {
    if (other == null) {
      return;
    }
    if (other.JsonName.Length != 0) {
      JsonName = other.JsonName;
    }
    if (other.JsonContent.Length != 0) {
      JsonContent = other.JsonContent;
    }
    if (other.JsonType.Length != 0) {
      JsonType = other.JsonType;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    input.ReadRawMessage(this);
  #else
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          JsonName = input.ReadString();
          break;
        }
        case 18: {
          JsonContent = input.ReadString();
          break;
        }
        case 26: {
          JsonType = input.ReadString();
          break;
        }
      }
    }
  #endif
  }

  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
          break;
        case 10: {
          JsonName = input.ReadString();
          break;
        }
        case 18: {
          JsonContent = input.ReadString();
          break;
        }
        case 26: {
          JsonType = input.ReadString();
          break;
        }
      }
    }
  }
  #endif

}

#endregion


#endregion Designer generated code
